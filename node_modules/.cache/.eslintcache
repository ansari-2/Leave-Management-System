[{"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\index.js":"1","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\reportWebVitals.js":"2","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\App.js":"3","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Login.js":"4","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Logout.js":"5","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Register.js":"6","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Lms_page.js":"7","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\lms_page.js":"8","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\LeaveForm.js":"9","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Leavestatus.js":"10","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Admin.js":"11","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Dashboard.js":"12","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Navbar.js":"13","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\TokenContext.js":"14","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Tokencontext.js":"15","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\tokens.js":"16"},{"size":814,"mtime":1693226641202,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1692611041858,"results":"19","hashOfConfig":"18"},{"size":1249,"mtime":1693225904833,"results":"20","hashOfConfig":"18"},{"size":3910,"mtime":1693303653188,"results":"21","hashOfConfig":"18"},{"size":968,"mtime":1693227879052,"results":"22","hashOfConfig":"18"},{"size":4563,"mtime":1693300795778,"results":"23","hashOfConfig":"18"},{"size":2076,"mtime":1692702048592,"results":"24","hashOfConfig":"18"},{"size":5613,"mtime":1692786502925,"results":"25","hashOfConfig":"18"},{"size":13480,"mtime":1693227829389,"results":"26","hashOfConfig":"18"},{"size":5791,"mtime":1693227835866,"results":"27","hashOfConfig":"18"},{"size":7860,"mtime":1693227806824,"results":"28","hashOfConfig":"18"},{"size":9456,"mtime":1693311117115,"results":"29","hashOfConfig":"18"},{"size":832,"mtime":1692885301187,"results":"30","hashOfConfig":"18"},{"size":403,"mtime":1693224608371,"results":"31","hashOfConfig":"18"},{"size":403,"mtime":1693224608371,"results":"32","hashOfConfig":"18"},{"size":329,"mtime":1693226629234,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vundla",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\index.js",[],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\App.js",["90"],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Login.js",[],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Logout.js",["91","92"],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Register.js",["93","94","95","96","97"],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Lms_page.js",[],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\lms_page.js",["98"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './lms_page.css'\r\n\r\nfunction LeaveApplication() {\r\n  const [employeeId, setEmployeeId] = useState('');\r\n  const [leave, setLeave] = useState('');\r\n  const [days, setDays] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [reason, setReason] = useState('');\r\n  const [leaveTypes, setLeaveTypes] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const [employeeleaveTypes, setEmployeeLeaveTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchLeaveTypes();\r\n    fetchEmployees();\r\n    // fetchEmployeeLeaveTypes();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/lms/employee/');\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching employees:', error);\r\n    }\r\n  };\r\n\r\n  const fetchLeaveTypes = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/lms/leave_type/');\r\n      setLeaveTypes(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching leave types:', error);\r\n    }\r\n  };\r\n\r\n//   const fetchEmployeeLeaveTypes = async () => {\r\n//     const leaveid = leaveTypes.filter(types => types['employee'] === employees.id)\r\n//     console.log(selectedEmployee)\r\n//     try {\r\n//       const response = await axios.get('http://localhost:8000/lms/leave_type/');\r\n//       setEmployeeLeaveTypes(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching leave types:', error);\r\n//     }\r\n//   };\r\n\r\n\r\n  const handleEmployeeChange = async (e) => {\r\n    const selectedEmpId = e.target.value;\r\n    setEmployeeId(selectedEmpId);\r\n    setSelectedEmployee(employees.find((employee) => employee.id === parseInt(selectedEmpId)));\r\n   \r\n  };\r\n\r\n  const handleLeaveChange = async (e) => {\r\n    const leaveid = leaveTypes.filter(types => types.employee === Number(employeeId))\r\n    // console.log(leaveid[0][\"id\"])\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/lms/leave_type/update/${leaveid[0][\"id\"]}`);\r\n      setEmployeeLeaveTypes(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching leave types:', error);\r\n    }\r\n    const selectedleave = e.target.value\r\n    setLeave(employeeleaveTypes[selectedleave])\r\n    console.log(leave)\r\n    // console.log(employeeleaveTypes[selectedleave])\r\n  };\r\n\r\n  const handleApplyLeave = async () => {\r\n    console.log(leave)\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/lms/apply/', {\r\n        employee: employeeId,\r\n        // leave_type: leaveTypeId,\r\n        days: days,\r\n        start_date: startDate,\r\n        end_date: endDate,\r\n        reason: reason,\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        console.log('Leave application successful');\r\n        // Update leave types and do any necessary state management\r\n      }\r\n    } catch (error) {\r\n      console.error('Error applying for leave:', error);\r\n      // Handle error, show error message to the user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <nav className=\"navbar\">\r\n        {selectedEmployee && (\r\n          <div className=\"employee-details\">\r\n          <p className=\"employee-detail\"><strong>Name:</strong> {selectedEmployee.emp_name}</p>\r\n          <p className=\"employee-detail\"><strong>Employee ID:</strong> {selectedEmployee.emp_id}</p>\r\n          <p className=\"employee-detail\"><strong>Designation:</strong> {selectedEmployee.designation}</p>\r\n        </div>\r\n        )}\r\n      </nav>\r\n      <form className=\"leave-form\">\r\n      <select value={employeeId} onChange={handleEmployeeChange}>\r\n        <option value=\"none\">Select Employee</option>\r\n        {employees.map((employee) => (\r\n          <option key={employee.id} value={employee.id}>\r\n            {employee.emp_name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <select  onChange={handleLeaveChange}>\r\n          <option value=\"\">Select Leave Type</option>\r\n          <option value=\"annual_leave\">Annual Leave</option>\r\n          <option value=\"sick_leave\">Sick/Personal Leave</option>\r\n          <option value=\"bereavement_leave\">Bereavement Leave</option>\r\n          <option value=\"maternity_leave\">Maternity Leave</option>\r\n          <option value=\"paternity_leave\">Paternity Leave</option>\r\n          <option value=\"study_leave\">Study Leave</option>\r\n          \r\n          \r\n          {/* {leaveTypes.map((leaveType) => (\r\n            <option key={leaveType.id} value={leaveType.id}>\r\n              {leaveType.leave_type}\r\n            </option>\r\n          ))} */}\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Available\"\r\n          value={leave}\r\n          // onChange={(e) => setStartDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"Start Date\"\r\n          value={startDate}\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"End Date\"\r\n          value={endDate}\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Reason\"\r\n          value={reason}\r\n          onChange={(e) => setReason(e.target.value)}\r\n        />\r\n        <button className=\"submit-button\" onClick={handleApplyLeave}>Apply</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeaveApplication;\r\n","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\LeaveForm.js",["99","100","101","102","103","104","105","106","107","108"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './LeaveForm.css';\nimport Navbar from './Navbar';\nimport {Link} from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css'; \nimport { notification } from 'antd'\nimport { TokenProvider,useToken } from './TokenContext';\n\nconst LeaveForm = () => {\n  const [showSubmittedData, setShowSubmittedData] = useState(false); // for showing submitted data\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState('');\n  const [employeeId, setEmployeeId] = useState('');\n  const [leave, setLeave] = useState('');\n  const [selectedleave, setSelectedLeave] = useState('');\n  const [days, setDays] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [reason, setReason] = useState('');\n  const { token } = useToken();\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [employeeleaveTypes, setEmployeeLeaveTypes] = useState([]);\n  const [formData, setFormData] = useState({\n    emp_firstname: '',\n    emp_id: '',\n    available_leaves: '',\n    leave_type: '',\n    start_date: '',\n    end_date: '',\n    reason: '',\n  });\n  const [submittedData, setSubmittedData] = useState([]);\n\n  useEffect(() => {\n    fetchLeaveTypes();\n    fetchEmployees();\n    // fetchEmployeeLeaveTypes();\n  }, []);\n\n  const fetchEmployees = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/lms/employee/');\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n    }\n  };\n\n  const fetchLeaveTypes = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/lms/leave_type/');\n      setLeaveTypes(response.data);\n    } catch (error) {\n      console.error('Error fetching leave types:', error);\n    }\n  };\n\n  const handleEmployeeChange = async (e) => {\n    const selectedEmpId = e.target.value;\n    setEmployeeId(selectedEmpId);\n    setSelectedEmployee(employees.find((employee) => employee.id === parseInt(selectedEmpId)));\n   \n  };\n\n  const handleLeaveChange = async (e) => {\n    const leaveid = leaveTypes.filter(types => types.employee === Number(employeeId))\n    // console.log(leaveid[0][\"id\"])\n    try {\n      const response = await axios.get(`http://localhost:8000/lms/leave_type/update/${leaveid[0][\"id\"]}`);\n      setEmployeeLeaveTypes(response.data);\n      // console.log(employeeleaveTypes)\n    } catch (error) {\n      console.error('Error fetching leave types:', error);\n    }\n    setSelectedLeave(e.target.value)\n    setLeave(employeeleaveTypes[selectedleave])\n    // console.log(employeeleaveTypes[selectedleave])\n  };\n\n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  \n  //   if (name === \"start_date\" || name === \"end_date\") {\n  //     // Calculate the difference between start date and end date\n  //     if (name === \"start_date\") {\n  //       setStartDate(value);\n  //     } else if (name === \"end_date\") {\n  //       setEndDate(value);\n  //     }\n  \n  //     if (startDate && endDate) {\n  //       const startDateObj = new Date(startDate);\n  //       const endDateObj = new Date(endDate);\n  //       const timeDiff = Math.abs(endDateObj.getTime() - startDateObj.getTime());\n  //       const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));\n  //       setDays(daysDiff);\n  //     } else {\n  //       setDays(\"\"); // Clear the days if either start or end date is not selected\n  //     }\n  //   } else {\n  //     setFormData((prevFormData) => ({\n  //       ...prevFormData,\n  //       [name]: value,\n  //     }));\n  //   }\n  // };\n  \n  // program to convert first letter of a string to uppercase\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    \n    const updatedleave = numberofleaves() - calculateNoOfDays()\n\n    const Leave_type_data = {\n      employee: selectedEmployee.id,\n      annual_leave: employeeleaveTypes['annual_leave'],\n      sick_leave: employeeleaveTypes['sick_leave'],\n      bereavement_leave: employeeleaveTypes['bereavement_leave'],\n      maternity_leave: employeeleaveTypes['maternity_leave'],\n      paternity_leave: employeeleaveTypes['paternity_leave'],\n      study_leave: employeeleaveTypes['study_leave'],\n     \n      \n    };\n   if(selectedleave in Leave_type_data){\n    Leave_type_data[selectedleave] = updatedleave\n   }\n    const LeaveData = {\n      emp: selectedEmployee.id,\n      start_date: startDate,\n      end_date: endDate,\n      leave_type: selectedleave,\n      reason: reason,\n      status: \"Pending\",\n      days: calculateNoOfDays()\n    }\n\n    try {\n      const response = await axios.put(\n        `http://localhost:8000/lms/leave_type/updat/${employeeleaveTypes['id']}`,\n        Leave_type_data\n      );\n      // console.log('Data submitted successfully:', response.data);\n      notification.success({\n        message: 'Leave Requested Successfully',\n        description:'Check Leave Status for further process',\n      });\n    } catch (error) {\n      console.error('Error submitting data:', error);\n \n    }\n\n    try {\n      const response = await axios.post(\n        'http://localhost:8000/lms/apply/',\n        LeaveData\n      );\n      console.log('Data submitted successfully:', response.data);\n      // alert('Data submitted successfully');\n      notification.success({\n        message:'Leave Request Submitted',\n        description:'For further updates check leave status'\n      })\n    } catch (error) {\n      console.error('Error submitting data:', error);\n \n    }\n\n    // Add the submitted data to the list\n    setSubmittedData((prevSubmittedData) => [...prevSubmittedData, formData]);\n    // console.log(submittedData)\n\n    setShowSubmittedData(true); // Show the submitted data box\n  };\n\n  const calculateNoOfDays = () => {\n    if (startDate && endDate) {\n      const fromDateObj = new Date(startDate);\n      const toDateObj = new Date(endDate);\n      const timeDiff = Math.abs(toDateObj - fromDateObj);\n      const noOfDays = Math.ceil(timeDiff / (1000 * 60 * 60 * 24)) + 1;\n      return noOfDays;\n    }\n    return '';\n}\n\n  const handleEmployeeSelect = (event) => {\n    const selectedId = event.target.value;\n    setSelectedEmployeeId(selectedId);\n\n    const selectedEmployee = employees.find((employee) => employee.id === parseInt(selectedId));\n\n    if (selectedEmployee) {\n      setFormData({\n        emp_firstname: selectedEmployee.emp_name,\n        emp_id: selectedEmployee.emp_id,\n        available_leaves: selectedEmployee.designation,\n        leave_type: selectedEmployee.leave_type,\n        start_date: selectedEmployee.start_date,\n        end_date: selectedEmployee.end_date,\n        reason: selectedEmployee.reason,\n      });\n    } else {\n      setFormData({\n        emp_name: '',\n        emp_id: '',\n        available_leaves: '',\n        leave_type: '',\n        start_date: '',\n        end_date: '',\n        reason: '',\n      });\n    }\n  };\n\n  const numberofleaves = () => {\n    return (employeeleaveTypes[selectedleave])\n\n  }\n\n  return (\n    <TokenProvider>\n    <div className=\"leaveform-container\"> \n        <div className=\"nav-bar\">\n        <Link to=\"/\" className=\"nav-item\">Dashboard</Link>\n        <Link to=\"/admin\" className=\"nav-item\">Admin</Link>\n        <Link to=\"/apply\" className=\"nav-item\">Apply Leave</Link>\n        <Link to=\"/leavestatus\" className=\"nav-item\">Leave Status</Link>\n        <div className=\"navbar-title\">Leave Management System</div>\n        <div className='logout-div'>\n          <select value={employeeId} onChange={handleEmployeeChange} className='select'>\n          <option value=\"none\">Select Employee</option>\n          {employees.map((employee) => (\n            <option key={employee.id} value={employee.id}>\n              {employee.emp_name}\n            </option>\n            ))}\n             </select>\n        <div className=\"nav-item\">\n        <span className=\"logout-icon\"></span>Logout</div>\n        </div>\n      </div>\n    \n    <div className=\"container\">\n\n      <div className=\"employee-form-container\">\n        <form onSubmit={handleFormSubmit}>\n          {/* ... Other form elements ... */}\n          \n          <div className=\"form-row\">\n          <div className=\"custom-layout\">\n             {selectedEmployee && ( \n             <>\n            <div className=\"form-group\">\n              <label htmlFor=\"emp_firstname\">Employee Name</label>\n              <input\n                type=\"text\"\n                id=\"emp_firstname\"\n                name=\"emp_firstname\"\n                value={selectedEmployee.emp_name } \n                // onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"emp_id\">Employee ID</label>\n              <input\n                type=\"text\"\n                id=\"emp_id\"\n                name=\"emp_id\"\n                value={selectedEmployee.emp_id}\n                // onChange={handleInputChange}\n              />\n            </div> \n            </>\n            )}\n          </div>\n          </div>\n         \n          <div className=\"form-row\">\n          <div className=\"custom-layout\">\n          <div className=\"form-group\">\n          <label htmlFor=\"leave_type\">Leave Type</label>\n          <select  onChange={handleLeaveChange}>\n                <option value=\"\">Select Leave Type</option>\n                <option value=\"annual_leave\">Annual/Earned Leave</option>\n                <option value=\"sick_leave\">Sick/Personal Leave</option>\n                <option value=\"bereavement_leave\">Bereavement Leave</option>\n                <option value=\"maternity_leave\">Maternity Leave</option>\n                <option value=\"paternity_leave\">Paternity Leave</option>\n                <option value=\"study_leave\">Study Leave</option>\n                \n                \n                {/* {leaveTypes.map((leaveType) => (\n                  <option key={leaveType.id} value={leaveType.id}>\n                    {leaveType.leave_type}\n                  </option>\n                ))} */}\n              </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"available_leaves\">Available Leaves</label>\n          <input\n            type=\"text\"\n            id=\"available_leaves\"\n            name=\"available_leaves\"\n            value={numberofleaves()}\n            // onChange={handleInputChange}\n          />\n        </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"start_date\">Start Date</label>\n              <input\n                type=\"date\"\n                id=\"start_date\"\n                name=\"start_date\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"end_date\">End Date</label>\n              <input\n                type=\"date\"\n                id=\"end_date\"\n                name=\"end_date\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"days\">Number of Days</label>\n              <input\n                type=\"number\"\n                id=\"days\"\n                name=\"days\"\n                value={calculateNoOfDays()}\n                readOnly\n              />\n            </div>\n          </div>\n          </div>\n          <div className=\"form-row-type\">\n          <div className=\"form-group reason\">\n            <label htmlFor=\"reason\">Reason</label>\n            <textarea\n              id=\"reason\"\n              name=\"reason\"\n              value={reason}\n              onChange={(e) => setReason(e.target.value)}\n            />\n          </div>\n          </div>\n          <div className=\"form-buttons\">\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n        </div>\n\n        {/* {showSubmittedData && (\n        <div className=\"submitted-data-container\">\n          <div className=\"submitted-data-box\">\n          <button\n          className=\"close-button\"\n          onClick={() => setShowSubmittedData(false)}\n            >\n            X\n            </button> */}\n\n            {/* <h3>Submitted Data</h3>\n            {/* Changes start here */}\n            {/* <table>\n              <thead>\n                <tr>\n                  <th>Employee Name</th>\n                  <th>Employee ID</th>\n                  <th>Available Leaves</th>\n                  <th>Leave Type</th>\n                  <th>Start Date</th>\n                  <th>End Date</th>\n                  <th>Reason</th>\n                </tr>\n              </thead>\n              <tbody>\n                {submittedData.map((data, index) => (\n                  <tr key={index}>\n                    <td>{data.emp_firstname}</td>\n                    <td>{data.emp_id}</td>\n                    <td>{data.available_leaves}</td>\n                    <td>{data.leave_type}</td>\n                    <td>{data.start_date}</td>\n                    <td>{data.end_date}</td>\n                    <td>{data.reason}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          \n          </div>\n        </div>\n      )}  */}\n    </div>\n    </div>\n    </TokenProvider>\n  );\n};\n\nexport default LeaveForm;",[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Leavestatus.js",["109"],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Admin.js",["110","111"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Admin.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { TokenProvider,useToken } from './TokenContext';\r\n\r\nconst Admin = () => {\r\n    const [leavedata, setLeaveData] = useState([]);\r\n    const [leavetypedata, setLeaveTypeData] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n    const [empleavedata, setEmpLeaveData] = useState([]);\r\n    const { token } = useToken();\r\n\r\n\r\n    useEffect(() => {\r\n        fetchEmployees();\r\n        fetchleaves();\r\n        fetchleave_types();\r\n      }, []);\r\n\r\n      const fetchEmployees = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:8000/lms/employee/');\r\n          setEmployees(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching employees:', error);\r\n        }\r\n      };\r\n\r\n      const fetchleaves = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:8000/lms/apply/');\r\n          setLeaveData(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching employees:', error);\r\n        }\r\n      };\r\n\r\n      const fetchleave_types = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:8000/lms/leave_type/');\r\n          setLeaveTypeData(response.data);\r\n        } catch (error) {\r\n          console.error('Error fetching employees:', error);\r\n        }\r\n      };\r\n\r\n      const handleEmployeeChange = async (e) => {\r\n        const selectedEmpId = parseInt(e.target.value);\r\n        const selectedEmp = employees.find((emp) => emp.id === selectedEmpId);\r\n        console.log(selectedEmp)\r\n        setSelectedEmployee(selectedEmp);\r\n        const requested_leave = leavedata.filter(leave => leave.emp === Number(selectedEmpId))\r\n        console.log(selectedEmployee)\r\n        setEmpLeaveData(requested_leave) \r\n      }; \r\n\r\n      const rejectleave = async (leaveId)  => {\r\n\r\n        let getleave = await axios.get(`http://localhost:8000/lms/update/${leaveId}`)\r\n        getleave.data.status = 'Rejected'\r\n        console.log(getleave.data)\r\n  \r\n        if (window.confirm('Are you sure you want to reject the leave request')){\r\n        try {\r\n          await axios.put(`http://localhost:8000/lms/update/${leaveId}`,getleave.data);\r\n          alert('Leave request rejected ')\r\n          fetchleaves()\r\n        } catch (error) {\r\n          console.error('Error fetching employees:', error);\r\n        }\r\n      }\r\n      }\r\n\r\n      const approveleave = async (leaveId)  => {\r\n\r\n        let getleave = await axios.get(`http://localhost:8000/lms/update/${leaveId}`)\r\n        getleave.data.status = 'Approved'\r\n        if (window.confirm('Are you sure you want to approve the leave request')){\r\n\r\n        try {\r\n            await axios.put(`http://localhost:8000/lms/update/${leaveId}`,getleave.data);\r\n            alert('Leave request approved ')\r\n            fetchleaves()\r\n        } catch (error) {\r\n            console.error('Error fetching employees:', error);\r\n        }\r\n            \r\n        // let leave_types = await axios.get('http://localhost:8000/lms/leave_type')\r\n        let getleave_type = leavetypedata.find((types) => types.employee === getleave.data.emp)\r\n        const selectedleave = getleave.data.leave_type\r\n        const leavesleft = getleave_type[selectedleave] - getleave.data.days\r\n        getleave_type[selectedleave] = leavesleft\r\n        console.log(getleave_type,selectedleave)\r\n        try {\r\n            await axios.put(`http://localhost:8000/lms/leave_type/update/${getleave_type.id}`,getleave_type);\r\n            fetchleaves()\r\n        } catch (error) {\r\n            console.error('Error fetching employees:', error);\r\n        }\r\n      }\r\n      }\r\n\r\n\r\n      function FormattedLeaveType(str) {\r\n\r\n        // converting first letter to uppercase\r\n        const formatted = str.charAt(0).toUpperCase() + str.slice(1).replace('_',' ');\r\n      \r\n        return formatted;\r\n      }\r\n\r\n      return(\r\n        <TokenProvider>\r\n      <div className='admin-container'>\r\n        <div className=\"nav-bar\">\r\n        <Link to=\"/\" className=\"nav-item\">Dashboard</Link>\r\n        <Link to=\"/admin\" className=\"nav-item\">Admin</Link>\r\n        <Link to=\"/apply\" className=\"nav-item\">Apply Leave</Link>\r\n        <Link to=\"/leavestatus\" className=\"nav-item\">Leave Status</Link>\r\n        <div className=\"navbar-title\">Leave Management System</div>\r\n        <div className='logout-div'>\r\n        <div className=\"nav-item\">\r\n        <span className=\"logout-icon\"></span>Logout</div>\r\n        </div>\r\n      </div>\r\n          \r\n        {empleavedata && (\r\n        <div className=\"submitted-data-container\">\r\n          <div className=\"submitted-data-box\">\r\n\r\n            <h3>Leave Data</h3>\r\n            {/* Changes start here */}\r\n            <table>\r\n              <thead className='table-header'>\r\n             \r\n                  <tr>\r\n                  <th>Employee Name</th>\r\n                  <th>Employee ID</th>\r\n                  {/* <th>Available Leaves</th> */}\r\n                  <th>Leave Type</th>\r\n                  <th>Start Date</th>\r\n                  <th>End Date</th>\r\n                  <th>Number of Days</th>\r\n                  <th>Reason</th>\r\n                  <th>Status</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n  \r\n                    {/* <td>{selectedEmployee.emp_name}</td>\r\n                    <td>{selectedEmployee.emp_id}</td> */}\r\n                    {/* <td>{empleavedata.available_leaves}</td> */}\r\n                  {leavedata.map((leave) => (\r\n                  <tr key={leave.id} >\r\n                    <>\r\n                    {employees.filter(employee => employee.id === leave.emp).map((employee) => (\r\n                        <td>{employee.emp_name}</td>  \r\n                    ))}\r\n                    {employees.filter(employee => employee.id === leave.emp).map((employee) => (\r\n                        <td>{employee.emp_id}</td>  \r\n                    ))}\r\n                    </>\r\n                    {/* <td>{selectedEmployee.emp_name}</td>\r\n                    <td>{selectedEmployee.emp_id}</td> */}\r\n                    <td>{FormattedLeaveType(leave.leave_type)}</td>\r\n                    <td>{leave.start_date}</td>\r\n                    <td>{leave.end_date}</td>\r\n                    <td>{leave.days}</td>\r\n                    <td>{leave.reason}</td>\r\n                    <td>{leave.status}</td>\r\n                    <td>\r\n                    <span className='approve'>\r\n                    {leave.status === 'Pending' &&(\r\n                    <button onClick={() => approveleave(leave.id)}className=\"approve-button\">\r\n                      Approve\r\n                      </button>\r\n                      )}\r\n                      </span>\r\n                      \r\n                    {leave.status === 'Pending' &&(\r\n                    <button onClick={() => rejectleave(leave.id)}className=\"delete-button\">\r\n                      Reject\r\n                      </button>\r\n                      )}\r\n                    {leave.status === 'Rejected' &&(\r\n                        <strong>Completed</strong>\r\n                      \r\n                      )}\r\n                      \r\n                    {leave.status === 'Approved' &&(\r\n                        <strong>Completed</strong>\r\n                      \r\n                      )}\r\n                    </td>\r\n                    \r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            {/* Changes end here */}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n          </div>\r\n          </TokenProvider>\r\n      )\r\n};\r\n\r\nexport default Admin;","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Dashboard.js",["112","113","114","115"],[],"import {React,useState, useEffect} from 'react';\nimport './Dashboard.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip } from 'recharts';\nimport Navbar from './Navbar';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { TokenProvider,useToken } from './TokenContext';\n\n\n\n\n\n\nconst Dashboard = () => {\n\n  const [leavedata, setLeaveData] = useState([]);\n  const [leavetypedata, setLeaveTypeData] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [empleavedata, setEmpLeaveData] = useState(null);\n  const [employeeId, setEmployeeId] = useState('');\n  const { token } = useToken();\n  \n\n\n  useEffect(() => {\n      fetchEmployees();\n      fetchleaves();\n      fetchleave_types();\n      employee();\n    }, []);\n\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/lms/employee/');\n        setEmployees(response.data);\n        console.log(response.data)\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n\n    const employee = async () => {\n      const emp = employees.find((employee) => employee.emp_name === token.username)\n      console.log(employees)\n      try {\n        const response = await axios.get(`http://localhost:8000/lms/employee/update/${emp.id}`);\n        setSelectedEmployee(response.data);\n        console.log(selectedEmployee)\n        \n      } catch (error) {\n        console.error('Error fetching employees:', error);\n        console.log(selectedEmployee)\n      }\n    }\n\n    const fetchleaves = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/lms/apply/');\n        setLeaveData(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n\n    const fetchleave_types = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/lms/leave_type/');\n        setLeaveTypeData(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n\n    const handleEmployeeChange = async (e) => {\n      const selectedEmpId = e.target.value;\n      setEmployeeId(selectedEmpId);\n      setSelectedEmployee(employees.find((employee) => employee.id === parseInt(selectedEmpId)));\n      const requested_leave = leavetypedata.filter(leave => leave.employee === Number(selectedEmpId))\n      setEmpLeaveData(requested_leave) \n      // console.log(empleavedata[0][\"annual_leave\"])\n     \n    };\n\n    function bar(){\n      if(empleavedata){\n        const data = [\n          console.log(typeof(empleavedata[0].annual_leave)),\n          { name: 'Annual Leave', leave_taken: 12 - 2, Annual_leave: 12 },\n          { name: 'Sick Leave', leave_taken:  empleavedata[0].sick_leave , Sick_leave: empleavedata[0].sick_leave },\n          { name: 'Bereavement Leave', leave_taken:  empleavedata[0].bereavement_leave, Bereavement_leave: empleavedata[0].bereavement_leave },\n          { name: 'Maternity Leave', leave_taken:  empleavedata[0].maternity_leave, Maternity_leave: empleavedata[0].maternity_leave },\n          { name: 'Paternity Leave', leave_taken:  empleavedata[0].paternity_leave, Paternity_leave: empleavedata[0].paternity_leave },\n          { name: 'Study Leave', leave_taken:  empleavedata[0].study_leave, Study_leave: empleavedata[0].study_leave },\n          { name: 'Total Leave', leave_taken:  totalleaves() , Total_leave: totalleaves() },\n        ];\n        return data\n      }else{\n        const data = [\n      \n          { name: 'Annual Leave', leave_taken: 3-1, Annual_leave: 8 },\n          { name: 'Sick Leave', leave_taken: 3, Sick_leave: 9 },\n          { name: 'Bereavement Leave', leave_taken: 3, Bereavement_leave: 9 },\n          { name: 'Maternity Leave', leave_taken: 3, Maternity_leave: 15 },\n          { name: 'Paternity Leave', leave_taken: 3, Paternity_leave: 15 },\n          { name: 'Study Leave', leave_taken: 3, Study_leave: 15 },\n          { name: 'Total Leave', leave_taken: 3, Total_leave: 15 },\n        ];\n        return data\n      }\n\n      \n    }\n\n\n    function totalleaves(){\n      const sumValues = empleavedata[0].annual_leave + empleavedata[0].sick_leave\n      return sumValues\n    }\n\n\n  return (\n    <TokenProvider>\n    <div className=\"dashboard-container\">\n        <div className=\"nav-bar\">\n        <Link to=\"/\" className=\"nav-item\">Dashboard</Link>\n        <Link to=\"/admin\" className=\"nav-item\">Admin</Link>\n        <Link to=\"/apply\" className=\"nav-item\">Apply Leave</Link>\n        <Link to=\"/leavestatus\" className=\"nav-item\">Leave Status</Link>\n        <div className=\"navbar-title\">Leave Management System</div>\n        <div className='logout-div'>\n        <select value={employeeId} onChange={handleEmployeeChange} className='select'>\n          <option value=\"none\">Select Employee</option>\n          {employees.map((employee) => (\n            <option key={employee.id} value={employee.id}>\n              {employee.emp_name}\n            </option>\n            ))}\n             </select>\n        <div className=\"nav-item\">\n        <span className=\"logout-icon\"></span>Logout</div>\n\n        </div>\n      </div>\n      \n      <div className=\"content\">\n        <div className='firstdiv'>\n      <div className=\"info-table-container\">\n        <table className=\"info-table\">\n          <tbody>\n            <tr>\n                <td className=\"info-label\">Employee Name</td>\n                {selectedEmployee &&(\n                <td className=\"info-value\">{selectedEmployee.emp_name}</td>\n                )} \n            </tr>\n            <tr>\n                <td className=\"info-label\">Employee ID</td>\n                {selectedEmployee &&(\n                <td className=\"info-value\">{selectedEmployee.emp_id}</td>\n                )} \n            </tr>\n            <tr>\n                <td className=\"info-label\">Employee Designation</td>\n                {selectedEmployee &&(\n                <td className=\"info-value\">{selectedEmployee.designation}</td>\n                )} \n            </tr>  \n            {/* <tr>\n              <td className=\"info-label\">Employee Name</td>\n              <td className=\"info-value\">Rahul</td>\n            </tr>\n\n            <tr>\n              <td className=\"info-label\">Employee ID</td>\n              <td className=\"info-value\">86215</td>\n            </tr>  \n\n            <tr>\n              <td className=\"info-label\">Designation</td>\n              <td className=\"info-value\">Software Engineer</td>\n            </tr> */}\n\n            \n          </tbody>\n        </table>\n        <br></br>\n        <br></br>\n                      {/* <div className='leave-tables'> */}\n      {/* leave-table1 removed */}\n      <div className=\"submitted-data-box\">\n          <h2>Leave Balance</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Annual Leave</th>\n                <th>Sick Leave</th>\n                <th>Bereavement Leave</th>\n                <th>Maternity Leave</th>\n                <th>Paternity Leave</th>\n                <th>Study Leave</th>\n                <th>Total Leaves</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                {empleavedata  &&(\n                  <>\n                <td>{empleavedata[0][\"annual_leave\"]}</td>\n                <td>{empleavedata[0].sick_leave}</td>\n                <td>{empleavedata[0].bereavement_leave}</td>\n                <td>{empleavedata[0].maternity_leave}</td>\n                <td>{empleavedata[0].paternity_leave}</td>\n                <td>{empleavedata[0].study_leave}</td>\n                <td>{totalleaves()}</td>\n\n                </>\n                )}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      {/* </div> */}\n      </div>\n          \n      {/* char starts */}\n     {/* <div className='piechart'>\n      <PieChart\n        data={[\n          { title: 'One', value: 10, color: '#E38627' },\n          { title: 'Two', value: 15, color: '#C13C37' },\n          { title: 'Three', value: 20, color: '#6A2135' },\n        ]}\n      />;\n      </div> */}\n      <div className=\"bar-chart-container\">\n          <h2>Leave Statistics</h2>\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <BarChart data={bar()} barsize = {100}>\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <CartesianGrid stroke=\"#ccc\" />\n              <Legend />\n              <Tooltip />\n              <Bar dataKey=\"leave_taken\" name=\"Leave Taken\" fill=\"#ff9900\" />\n              <Bar dataKey=\"Annual_leave\" name=\"Annual Leave\" fill=\"#00FFFF\" />\n              <Bar dataKey=\"Sick_leave\" name=\"Sick Leave\" fill=\"#82ca9d\" />\n              <Bar dataKey=\"Bereavement_leave\" name=\"Bereavement Leave\" fill=\"#FFFFFF\" />\n              <Bar dataKey=\"Maternity _leave\" name=\"Maternity  Leave\" fill=\"#808000\" />\n              <Bar dataKey=\"Paternity_leave\" name=\"Paternity Leave\" fill=\"#8884d8\" />\n              <Bar dataKey=\"Study_leave\" name=\"Study Leave\" fill=\"#ffc658\" />\n              <Bar dataKey=\"Total_leave\" name=\"Total Leave\" fill=\"#f50057\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        </div>\n        {/* char ends */}\n\n    </div>\n    </div>\n    </TokenProvider>\n    \n  );\n};\n\n\nexport default Dashboard;\n","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Navbar.js",["116","117","118","119","120","121","122","123"],[],"import React from 'react';\r\nimport './Dashboard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Legend, Tooltip } from 'recharts';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"nav-bar\">\r\n        <div className=\"nav-item\">Profile</div>\r\n        <div className=\"nav-item\">Leave Status</div>\r\n        <div className=\"nav-item\">Admin</div>\r\n        <Link to=\"/apply\" className=\"nav-item\">Apply Leave</Link>\r\n        <div className=\"navbar-title\">Leave Management System</div>\r\n        <div className='logout-div'>\r\n        <div className=\"nav-item\">\r\n        <span className=\"logout-icon\"></span>Logout</div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\n\r\nexport default Navbar;\r\n","C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\TokenContext.js",[],[],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\Tokencontext.js",[],[],"C:\\Users\\ansar\\OneDrive\\Desktop\\LMS\\lms_app\\lms_react\\src\\components\\tokens.js",[],[],{"ruleId":"124","severity":1,"message":"125","line":2,"column":9,"nodeType":"126","messageId":"127","endLine":2,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":23},{"ruleId":"124","severity":1,"message":"129","line":5,"column":11,"nodeType":"126","messageId":"127","endLine":5,"endColumn":16},{"ruleId":"124","severity":1,"message":"130","line":5,"column":9,"nodeType":"126","messageId":"127","endLine":5,"endColumn":21},{"ruleId":"124","severity":1,"message":"131","line":14,"column":10,"nodeType":"126","messageId":"127","endLine":14,"endColumn":20},{"ruleId":"124","severity":1,"message":"132","line":14,"column":22,"nodeType":"126","messageId":"127","endLine":14,"endColumn":35},{"ruleId":"124","severity":1,"message":"133","line":15,"column":10,"nodeType":"126","messageId":"127","endLine":15,"endColumn":19},{"ruleId":"124","severity":1,"message":"134","line":15,"column":21,"nodeType":"126","messageId":"127","endLine":15,"endColumn":33},{"ruleId":"124","severity":1,"message":"135","line":8,"column":16,"nodeType":"126","messageId":"127","endLine":8,"endColumn":23},{"ruleId":"124","severity":1,"message":"136","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"137","line":8,"column":24,"nodeType":"126","messageId":"127","endLine":8,"endColumn":32},{"ruleId":"124","severity":1,"message":"138","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":27},{"ruleId":"124","severity":1,"message":"139","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":28},{"ruleId":"124","severity":1,"message":"140","line":15,"column":10,"nodeType":"126","messageId":"127","endLine":15,"endColumn":15},{"ruleId":"124","severity":1,"message":"141","line":17,"column":10,"nodeType":"126","messageId":"127","endLine":17,"endColumn":14},{"ruleId":"124","severity":1,"message":"135","line":17,"column":16,"nodeType":"126","messageId":"127","endLine":17,"endColumn":23},{"ruleId":"124","severity":1,"message":"142","line":34,"column":10,"nodeType":"126","messageId":"127","endLine":34,"endColumn":23},{"ruleId":"124","severity":1,"message":"143","line":142,"column":13,"nodeType":"126","messageId":"127","endLine":142,"endColumn":21},{"ruleId":"124","severity":1,"message":"144","line":190,"column":9,"nodeType":"126","messageId":"127","endLine":190,"endColumn":29},{"ruleId":"124","severity":1,"message":"129","line":12,"column":13,"nodeType":"126","messageId":"127","endLine":12,"endColumn":18},{"ruleId":"124","severity":1,"message":"129","line":13,"column":13,"nodeType":"126","messageId":"127","endLine":13,"endColumn":18},{"ruleId":"124","severity":1,"message":"145","line":49,"column":13,"nodeType":"126","messageId":"127","endLine":49,"endColumn":33},{"ruleId":"124","severity":1,"message":"136","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"146","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":18},{"ruleId":"124","severity":1,"message":"147","line":17,"column":10,"nodeType":"126","messageId":"127","endLine":17,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":32,"column":8,"nodeType":"150","endLine":32,"endColumn":10,"suggestions":"151"},{"ruleId":"124","severity":1,"message":"152","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":29},{"ruleId":"124","severity":1,"message":"153","line":4,"column":31,"nodeType":"126","messageId":"127","endLine":4,"endColumn":39},{"ruleId":"124","severity":1,"message":"154","line":4,"column":41,"nodeType":"126","messageId":"127","endLine":4,"endColumn":44},{"ruleId":"124","severity":1,"message":"155","line":4,"column":46,"nodeType":"126","messageId":"127","endLine":4,"endColumn":51},{"ruleId":"124","severity":1,"message":"156","line":4,"column":53,"nodeType":"126","messageId":"127","endLine":4,"endColumn":58},{"ruleId":"124","severity":1,"message":"157","line":4,"column":60,"nodeType":"126","messageId":"127","endLine":4,"endColumn":73},{"ruleId":"124","severity":1,"message":"158","line":4,"column":75,"nodeType":"126","messageId":"127","endLine":4,"endColumn":81},{"ruleId":"124","severity":1,"message":"159","line":4,"column":83,"nodeType":"126","messageId":"127","endLine":4,"endColumn":90},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'TokenProvider' is defined but never used.","'token' is assigned a value but never used.","'notification' is defined but never used.","'activeuser' is assigned a value but never used.","'setActiveUser' is assigned a value but never used.","'employees' is assigned a value but never used.","'setEmployees' is assigned a value but never used.","'setDays' is assigned a value but never used.","'Navbar' is defined but never used.","'useToken' is defined but never used.","'showSubmittedData' is assigned a value but never used.","'selectedEmployeeId' is assigned a value but never used.","'leave' is assigned a value but never used.","'days' is assigned a value but never used.","'submittedData' is assigned a value but never used.","'response' is assigned a value but never used.","'handleEmployeeSelect' is assigned a value but never used.","'handleEmployeeChange' is assigned a value but never used.","'PieChart' is defined but never used.","'leavedata' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'employee'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'ResponsiveContainer' is defined but never used.","'BarChart' is defined but never used.","'Bar' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'CartesianGrid' is defined but never used.","'Legend' is defined but never used.","'Tooltip' is defined but never used.",{"desc":"161","fix":"162"},"Update the dependencies array to be: [employee]",{"range":"163","text":"164"},[912,914],"[employee]"]